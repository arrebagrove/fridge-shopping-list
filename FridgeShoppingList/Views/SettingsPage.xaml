<Page x:Class="FridgeShoppingList.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:converter="using:Template10.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:FridgeShoppingList.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:FridgeShoppingList.ViewModels"
      xmlns:ctls="using:FridgeShoppingList.Controls"
      mc:Ignorable="d">

    <Page.Resources>
        <converter:ValueWhenConverter x:Name="FalseWhenTrueConverter">
            <converter:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.When>
            <converter:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converter:ValueWhenConverter.Value>
            <converter:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.Otherwise>
        </converter:ValueWhenConverter>
    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
                   Padding="0 20 0 20">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <ctls:LcarsHeader x:Name="pageHeader"                          
                          RelativePanel.AlignTopWithPanel="True"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.AlignRightWithPanel="True"
                          FrameReference="{x:Bind ViewModel.NavigationService.Frame}">
            <StackPanel Background="Black" 
                        Margin="20 -5 20 0" 
                        Padding="20 0 20 0"
                        Orientation="Horizontal">
                <TextBlock Text="SETTINGS" Style="{StaticResource LcarsHeaderTextBlockStyle}"/>
                <Button x:Name="PowerOptionsButton"
                        Background="Black"
                        Foreground="{ThemeResource LcarsAccentBrush}"
                        Margin="10 0 0 0"
                        Height="38" Width="60"
                        VerticalAlignment="Center">
                    <Button.Content>
                        <FontIcon Glyph="{Binding Source={StaticResource FontIcons}, Path=Power}"/>
                    </Button.Content>
                    <Button.Flyout>
                        <MenuFlyout>
                            <MenuFlyoutItem Command="{x:Bind ViewModel.ShutdownCommand}" 
                                            Text="Shutdown" 
                                            Style="{StaticResource ShutdownMenuFlyoutItemStyle}"/>
                            <MenuFlyoutItem Command="{x:Bind ViewModel.RestartCommand}" 
                                            Text="Restart" 
                                            Style="{StaticResource ShutdownMenuFlyoutItemStyle}"/>
                        </MenuFlyout>
                    </Button.Flyout>
                </Button>
            </StackPanel>
        </ctls:LcarsHeader>
        
        <!--  content  -->
        <Pivot x:Name="MyPivot"
               Grid.Row="1"
               EntranceNavigationTransitionInfo.IsTargetElement="True"
               RelativePanel.AlignBottomWithPanel="True"
               RelativePanel.AlignLeftWithPanel="True"
               RelativePanel.AlignRightWithPanel="True"
               RelativePanel.Below="pageHeader">

            <!--  settings  -->
            <PivotItem DataContext="{Binding SettingsPartViewModel}" Header="Settings">
                <ScrollViewer Margin="0,12,-12,0"
                              HorizontalContentAlignment="Left"
                              VerticalScrollBarVisibility="Auto">
                    <RelativePanel HorizontalAlignment="Left">
                    </RelativePanel>

                </ScrollViewer>
            </PivotItem>

            <!--  about  -->
            <PivotItem Header="About">
                <RelativePanel DataContext="{Binding AboutPartViewModel}">

                    <Border x:Name="LogoImage"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            BorderBrush="DimGray"
                            BorderThickness="1"
                            IsHitTestVisible="False"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True">
                        <Border.Background>
                            <SolidColorBrush Color="{ThemeResource SystemAccentColor}" />
                        </Border.Background>
                        <Image Margin="12"
                               Source="{Binding Logo}"
                               Stretch="None" />
                    </Border>

                    <TextBlock x:Name="DisplayNameTextBlock"                                                              
                               RelativePanel.AlignLeftWithPanel="True"                               
                               RelativePanel.AlignTopWithPanel="True"
                               Margin="0 0 0 10"
                               Text="{x:Bind ViewModel.AboutPartViewModel.DisplayName}" 
                               Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>

                    <TextBlock x:Name="VersionTextBlock"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="DisplayNameTextBlock"
                               Text="Version"
                               Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>

                    <TextBlock x:Name="VersionNumberTextBlock"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="VersionTextBlock"
                               Margin="10 0 0 0"
                               Text="{x:Bind ViewModel.AboutPartViewModel.Version}"/>

                    <TextBlock x:Name="AvailableMemoryHeader"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="VersionNumberTextBlock"
                               Margin="0 10 0 0"
                               Text="Available memory"
                               Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>
                    <TextBlock x:Name="AvailableMemoryNumber"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="AvailableMemoryHeader"
                               Margin="10 0 0 0"
                               Text="{x:Bind ViewModel.AboutPartViewModel.AvailableMemory, Mode=OneWay}"/>
                    <TextBlock x:Name="NetworkHeader"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="AvailableMemoryNumber"
                               Margin="0 10 0 0"
                               Text="Network"
                               Style="{ThemeResource LcarsSubtitleTextBlockStyle}"/>
                    <ProgressBar x:Name="NetworkLoadingIndicator"
                                         RelativePanel.AlignLeftWithPanel="True"
                                         RelativePanel.Below="NetworkHeader"
                                         RelativePanel.AlignRightWith="DisplayNameTextBlock"
                                         IsIndeterminate="True"
                                         Visibility="{x:Bind ViewModel.AboutPartViewModel.IsNetworkInfoLoading, Mode=OneWay}"/>
                    <ListViewItem x:Name="WifiButton" 
                                  RelativePanel.Below="NetworkHeader"
                                  RelativePanel.AlignLeftWithPanel="True"
                                  Tapped="WifiButton_Tapped"
                                  MinWidth="150"
                                  Padding="10">
                        <RelativePanel>
                            <Border x:Name="NetworkIcon"                                     
                                    Background="{ThemeResource SystemControlBackgroundAccentBrush}"
                                    Padding="5">
                                <FontIcon FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                          FontSize="30"
                                          Glyph="{x:Bind ViewModel.AboutPartViewModel.NetworkIconGlyph, Mode=OneWay}"/>
                            </Border>
                            <TextBlock x:Name="NetworkNameBlock"
                                       RelativePanel.RightOf="NetworkIcon"
                                       RelativePanel.Above="IpAddressBlock"
                                       Margin="5 0 0 0"
                                       Text="{x:Bind ViewModel.AboutPartViewModel.NetworkName, Mode=OneWay}"/>
                            <TextBlock x:Name="IpAddressBlock"
                                       RelativePanel.RightOf="NetworkIcon"
                                       RelativePanel.AlignBottomWith="NetworkIcon"
                                       Margin="5 0 0 0"
                                       Text="{x:Bind ViewModel.AboutPartViewModel.IpAddress, Mode=OneWay}"/>
                        </RelativePanel>
                    </ListViewItem>


                </RelativePanel>
            </PivotItem>
        </Pivot>

    </RelativePanel>

</Page>

