<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Template10.Controls"
                    xmlns:Behaviors="using:Template10.Behaviors"
                    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
                    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Styles/LcarsColors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <x:Double x:Key="NarrowMinWidth">0</x:Double>
    <x:Double x:Key="NormalMinWidth">521</x:Double>
    <x:Double x:Key="WideMinWidth">1200</x:Double>

    <!--Tiny bit of duplication here, but we'll live-->
    <Color x:Key="SystemAccentColor">#FFFE9900</Color>
    
    <Color x:Key="ShutdownBorderColor">#333333</Color>
    <SolidColorBrush x:Key="ShutdownBorderBrush" Color="{StaticResource ShutdownBorderColor}"/>
    <SolidColorBrush x:Key="ExtendedSplashBackgroundBrush" Color="{ThemeResource ExtendedSplashBackgroundColor}"/>
    <SolidColorBrush x:Key="ExtendedSplashForegroundBrush" Color="{ThemeResource ExtendedSplashForegroundColor}"/>

    <!--Textblock Styles-->
    <!--Override boring unstyle textblocks-->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{ThemeResource LcarsAccentBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource LcarsThinFont}"/>
        <Setter Property="FontSize" Value="25"/>
    </Style>

    <Style x:Key="LcarsBaseTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
        <Setter Property="Foreground" Value="{ThemeResource LcarsAccentBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource LcarsThinFont}"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="LcarsHeaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="40"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>

    <Style x:Key="LcarsSubheaderTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="34"/>
        <Setter Property="FontWeight" Value="Light"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>

    <Style x:Key="LcarsTitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontWeight" Value="SemiLight"/>
        <Setter Property="FontSize" Value="29"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>

    <Style x:Key="LcarsSubtitleTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="25"/>
        <Setter Property="OpticalMarginAlignment" Value="TrimSideBearings"/>
    </Style>

    <Style x:Key="LcarsBodyTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontFamily" Value="Normal"/>
        <Setter Property="FontSize" Value="20"/>
    </Style>

    <Style x:Key="LcarsCaptionTextBlockStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{ThemeResource LcarsCaptionTextBlockBrush}"/>
    </Style>

    <Style TargetType="AppBarButton">
        <Setter Property="FontFamily" Value="{StaticResource LcarsThinFont}"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>

    <Style TargetType="controls:HamburgerMenu">
        <Setter Property="HamburgerBackground" Value="{ThemeResource LcarsAccentBrush}" />
        <Setter Property="HamburgerForeground" Value="Black" />
        <Setter Property="NavAreaBackground" Value="{ThemeResource LcarsAccentBrush}" />
        <Setter Property="NavButtonForeground" Value="Black" />
        <Setter Property="NavButtonBackground" Value="Transparent" />
        <Setter Property="NavButtonCheckedForeground" Value="Black" />
        <Setter Property="NavButtonCheckedBackground" Value="{ThemeResource LcarsHamburgerBackgroundSelectedBrush}" />
        <Setter Property="NavButtonCheckedIndicatorBrush" Value="{ThemeResource LcarsBlueGrayBrush}" />
        <Setter Property="NavButtonHoverForeground" Value="Black"/>
        <Setter Property="NavButtonHoverBackground" Value="{ThemeResource LcarsHamburgerBackgroundHoverBrush}"/>
        <Setter Property="NavButtonPressedForeground" Value="White" />
        <Setter Property="NavButtonPressedBackground" Value="{ThemeResource LcarsHamburgerBackgroundPressedBrush}"/>
        <Setter Property="VisualStateNarrowMinWidth" Value="{StaticResource NarrowMinWidth}" />
        <Setter Property="VisualStateNormalMinWidth" Value="{StaticResource NormalMinWidth}" />
        <Setter Property="VisualStateWideMinWidth" Value="{StaticResource WideMinWidth}" />
    </Style>

    <Style x:Key="WifiListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{StaticResource LcarsFont}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
        <Setter Property="Padding" Value="12,0,14,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
        <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ListViewItemPresenter CheckBrush="{ThemeResource SystemControlBackgroundBaseMediumHighBrush}" ContentMargin="{TemplateBinding Padding}" CheckMode="Inline" ContentTransitions="{TemplateBinding ContentTransitions}" CheckBoxBrush="{ThemeResource SystemControlBackgroundBaseMediumHighBrush}" DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}" DragBackground="{ThemeResource ListViewItemDragBackgroundThemeBrush}" DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" PointerOverForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" PressedBackground="{ThemeResource SystemControlForegroundListMediumBrush}" PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" PointerOverBackground="{ThemeResource SystemControlForegroundListLowBrush}" ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" SelectedPressedBackground="{ThemeResource SystemControlHighlightAltListAccentHighBrush}" SelectionCheckMarkVisualEnabled="True" SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" SelectedPointerOverBackground="{ThemeResource SystemControlHighlightAltListAccentLowBrush}" SelectedBackground="{ThemeResource SystemControlHighlightAltListAccentLowBrush}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShutdownListViewItemStyle" TargetType="ListViewItem">
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="TabNavigation" Value="Local"/>
        <Setter Property="IsHoldingEnabled" Value="True"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <ListViewItemPresenter ContentTransitions="{TemplateBinding ContentTransitions}" 
                                           DragForeground="{ThemeResource ListViewItemDragForegroundThemeBrush}" 
                                           DragOpacity="0.2"
                                           DragBackground="{StaticResource ListViewItemDragBackgroundThemeBrush}" 
                                           DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}" 
                                           FocusBorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" 
                                           HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                           Padding="{TemplateBinding Padding}" 
                                           PointerOverBackgroundMargin="1" 
                                           PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackgroundThemeBrush}" 
                                           PointerOverBackground="{ThemeResource SystemControlBackgroundAccentBrush}" 
                                           ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" 
                                           SelectedPointerOverBorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" 
                                           SelectionCheckMarkVisualEnabled="False" 
                                           SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}" 
                                           SelectedPointerOverBackground="{ThemeResource SystemControlBackgroundAccentBrush}" 
                                           SelectedBorderThickness="{ThemeResource ListViewItemCompactSelectedBorderThemeThickness}" 
                                           SelectedBackground="{ThemeResource SystemControlBackgroundAccentBrush}" 
                                           VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ShutdownMenuFlyoutItemStyle" TargetType="MenuFlyoutItem">
        <Setter Property="Background" Value="{ThemeResource MenuFlyoutItemBackground}"/>
        <Setter Property="Foreground" Value="{ThemeResource MenuFlyoutItemForeground}"/>
        <Setter Property="Padding" Value="{ThemeResource MenuFlyoutItemThemePadding}"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="UseSystemFocusVisuals" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuFlyoutItem">
                    <Grid x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="TextBlock"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemBackgroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemForegroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerUpThemeAnimation Storyboard.TargetName="TextBlock"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemBackgroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemForegroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <PointerDownThemeAnimation Storyboard.TargetName="TextBlock"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemBackgroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemForegroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckPlaceholderStates">
                                <VisualState x:Name="NoPlaceholder"/>
                                <VisualState x:Name="CheckPlaceholder">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Margin" Storyboard.TargetName="TextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemPlaceholderThemeThickness}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PaddingSizeStates">
                                <VisualState x:Name="DefaultPadding"/>
                                <VisualState x:Name="NarrowPadding">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Padding" Storyboard.TargetName="LayoutRoot">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource MenuFlyoutItemThemePaddingNarrow}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <TextBlock x:Name="TextBlock" 
                                   Foreground="{TemplateBinding Foreground}" 
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                                   
                                   Margin="20 5 20 5"
                                   Text="{TemplateBinding Text}" 
                                   TextTrimming="Clip" 
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="EmptyCollectionHeaderStyle" TargetType="TextBlock" BasedOn="{StaticResource LcarsBaseTextBlockStyle}">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{ThemeResource LcarsBlueGrayBrush}"/>
    </Style>

    <Style x:Key="PageHeaderButton" TargetType="Button">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="Padding" Value="0,0,9,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Background" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemControlDisabledBaseLowBrush}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          AutomationProperties.AccessibilityView="Raw"
                                          Background="{TemplateBinding Background}"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentTransitions="{TemplateBinding ContentTransitions}"
                                          Padding="{TemplateBinding Padding}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Width" Value="{ThemeResource AppBarExpandButtonThemeWidth}" />
    </Style>
    
    <ResourceDictionary.ThemeDictionaries>

        <ResourceDictionary x:Key="Light">
            <Color x:Key="ExtendedSplashBackgroundColor">White</Color>
            <Color x:Key="ExtendedSplashForegroundColor">Black</Color>
        </ResourceDictionary>

        <ResourceDictionary x:Key="Default">

            <Color x:Key="ExtendedSplashBackgroundColor">Black</Color>
            <Color x:Key="ExtendedSplashForegroundColor">White</Color>

            <SolidColorBrush x:Key="LcarsAccentBrush" Color="{StaticResource LcarsGold}"/>
            <SolidColorBrush x:Key="LcarsOrangeBrush" Color="{StaticResource LcarsOrange}"/>
            <SolidColorBrush x:Key="LcarsBlueGrayBrush" Color="{StaticResource LcarsBlueGray}"/>
            <SolidColorBrush x:Key="LcarsRedBrush" Color="{StaticResource LcarsRed}"/>

            <SolidColorBrush x:Key="LcarsCaptionTextBlockBrush" Color="{StaticResource LcarsGold}" Opacity=".8"/>

                    <!--For listviews with a black background-->
            <SolidColorBrush x:Key="LcarsListViewBackgroundHoverBrush" Color="{StaticResource LcarsOrange}" Opacity=".3"/>
            <SolidColorBrush x:Key="LcarsListViewBackgroundPressedBrush" Color="{StaticResource LcarsOrange}" Opacity=".6"/>
            <SolidColorBrush x:Key="LcarsListViewBackgroundHoverPressedBrush" Color="{StaticResource LcarsOrange}" Opacity=".7"/>
            <SolidColorBrush x:Key="LcarsListViewBackgroundSelectedBrush" Color="{StaticResource LcarsOrange}" Opacity=".2"/>

            <!--For listview with the LcarsGold background-->
            <SolidColorBrush x:Key="LcarsHamburgerBackgroundHoverBrush" Color="{StaticResource LcarsBlueGray}" Opacity=".3"/>
            <SolidColorBrush x:Key="LcarsHamburgerBackgroundPressedBrush" Color="{StaticResource LcarsBlueGray}" Opacity=".6"/>
            <SolidColorBrush x:Key="LcarsHamburgerBackgroundHoverPressedBrush" Color="{StaticResource LcarsBlueGray}" Opacity=".7"/>
            <SolidColorBrush x:Key="LcarsHamburgerBackgroundSelectedBrush" Color="{StaticResource LcarsBlueGray}" Opacity=".2"/>
        </ResourceDictionary>

        <ResourceDictionary x:Key="HighContrast">

            <Color x:Key="ExtendedSplashBackgroundColor">Black</Color>
            <Color x:Key="ExtendedSplashForegroundColor">White</Color>

            <Style TargetType="controls:HamburgerMenu">
                <Setter Property="PaneBorderThickness" Value="0" />
                <Setter Property="SecondarySeparator" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="NavButtonBackground" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="NavButtonForeground" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="NavAreaBackground" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="HamburgerForeground" Value="{ThemeResource SystemColorWindowColor}" />
                <Setter Property="HamburgerBackground" Value="{ThemeResource SystemColorWindowTextColor}" />
                <Setter Property="VisualStateNarrowMinWidth" Value="{StaticResource NarrowMinWidth}" />
                <Setter Property="VisualStateNormalMinWidth" Value="{StaticResource NormalMinWidth}" />
                <Setter Property="VisualStateWideMinWidth" Value="{StaticResource WideMinWidth}" />
            </Style>

        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>
</ResourceDictionary>


